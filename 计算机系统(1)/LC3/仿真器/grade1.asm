     .ORIG x3000;  程序的其实位置
     LD R0,flag;   将R0存储位排序后的数据地址
     AND R5,R5,#0; 
     ADD R5,R5,#15;  用一个寄存器R5表示循环的次数
LODE LD R1,date;  用一个寄存器R1存储数据的地址
     AND R2,R2,#0; 
     ADD R2,R2,R1;
     ADD R2,R2,#1; 用一个寄存器R2存储被比较数据的地址
     AND R6,R6,#0;
     ADD R6,R6,#15; 用一个寄存器R6存储被比较的次数
SORT LDR R3,R1,#0; 
     LDR R4,R2,#0; 用两个寄存器R3，R4装在比较数据和被比较数据
     NOT R4,R4;  
     ADD R4,R4,#1; 将被比较的数据取负
     ADD R7,R3,R4; 比较这两个数据的大小
     BRzp COMPARE;
     AND R1,R1,#0;
     ADD R1,R1,R2; 将两个比较寄存器中数值较大的一个数的地址存储在寄存器R1中
COMPARE ADD R2,R2,#1; 寄存器R2加一，比较下一个的值
     ADD R6,R6,#-1; 循环次数-1
     BRzp SORT;  若循环次数不为0，继续比较下一个数，直至循环次数为0
     STR R3,R0,#0;  此时R3中存储的值为最大值，将其存储在R0寄存器上
     ADD R0,R0,#1;  寄存器R0指向下一个位置
     AND R7,R7,#0;   
     STR R7,R1,#0;  寄存器R1此时指向的那个地址的值置0
     ADD R5,R5,#-1; 循环计数器-1
     BRzp LODE;  若循环计数器不为0，跳转到LODE处，比较选出次最大的数据

     LD R0,flag; 用一个寄存器R0储存排序后数据的地址
     LD R1,M1;  用一个寄存器R1存储85分，用来比较选出A等级的人数
     NOT R1,R1;
     ADD R1,R1,#1;将寄存器R1的值取反，得到-85
     LD R2,M2; 用一个寄存器R2存储75分，用来比较选出B等级的人数
     NOT R2,R2;
     ADD R2,R2,#1; 将寄存器R2的值取反，得到-75
     AND R4,R4,#0;
     AND R5,R5,#0; 用两个寄存器分别储存A和B等级的人数
     AND R6,R6,#0; 
     ADD R6,R6,#7; 用一个寄存器来储存循环次数
GRADE LDR R7,R0,#0; 用一个寄存器R7存放成绩
     ADD R3,R7,R1; 将所要判断的数据与-85相加，存放在R3寄存器当中
     BRn A;如果所要判断的数据小于85的话，则n被置为0，跳转到A处
     ADD R3,R6,#-3; 若判断的数据大于等于85，且A人数是否已满
     BRnz R5_1; 若A人数已经超过25%，则跳转R5_1
     ADD R4,R4,#1; 寄存器R4+1；
     ADD R0,R0,#1; R0指向下一个数据的地址
     ADD R6,R6,#-1; 循环次数-1
     BRnzp GRADE; 跳转置GRADE，继续判断下一个数据

A    ADD R7,R7,R2; 将所要判断的数据与-75相加，存放在R7寄存器当中
     BRn B;如果所要判断的数据小于75的话，则n被置为0，跳转到B处

R5_1 ADD R5,R5,#1; 存放B等级的寄存器+1
B    ADD R0,R0,#1; R0指向下一个数据的地址
     ADD R6,R6,#-1; 循环次数-1；
     BRzp GRADE;如果循环计数器不小于0，则跳转到GRADE处，判断下一个数据
     LD R3,grade; 将寄存器R3存放为存放人数的地址
     STR R4,R3,#0; 将A的人数存放到R3中
     ADD R3,R3,#1; R3指向存放B等级的地址
     STR R5,R3,#0; 将B等级的人数存放在R3中
     HALT
flag .FILL x4000; flag为存放比较后数据的地址
date .FILL x3200; data为存放第一个学生的成绩的地址
M1 .FILL x0055; 转换为十进制为85
M2 .FILL x004B; 转换为十进制为75
grade .FILL x4100; grade为存放A等级人数的地址
.END